{"version":3,"sources":["components/nav.js","components/pages/aboutme.js","utils/correctData.js","utils/images.js","components/pages/card.js","components/pages/portfolio.js","components/pages/contact.js","utils/helpers.js","components/portfoliomain.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","useState","active","setSatge","changeState","window","location","hash","navOpen","toggleOpen","closeNav","color","dark","expand","onClick","className","to","id","isOpen","navbar","right","styles","placement","domElement","style","display","href","target","fab","icon","About","src","alt","md","size","fixTitleName","title","titleSplit","toLowerCase","split","i","length","charAt","toUpperCase","slice","join","images","name","link","returnLink","repo","Card","repos","getRepos","useEffect","a","fetch","response","json","data","getData","combineRepo","console","log","renderedCards","map","width","height","behavior","levitate","homepage","top","overlay","hover","waves","description","svn_url","topics","texh","Portfolio","FormPage","email","setEmail","userName","setName","subject","setSubject","text","setText","errorMessage","setErrorMessage","handleInputChange","e","inputType","inputValue","value","htmlFor","type","onChange","rows","outline","preventDefault","test","String","validateEmail","far","Portfoliomain","exact","path","component","Contact","render","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b0971f06.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBTooltip, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon,\n} from \"mdbreact\";\n\nimport styles from './pages/card2.css'\n\nconst Nav = () => {\n\n  let [active, setSatge] = useState('/aboutme');\n\n  let changeState = () => {\n    setSatge(() => {\n      return window.location.hash;\n    })\n  };\n\n  const [navOpen, toggleOpen] = useState(false)\n  const closeNav = () => {\n    toggleOpen(false)\n  }\n\n  return (\n    <MDBNavbar color=\"black\" dark expand=\"md\">\n      <MDBNavbarBrand onClick={changeState} >\n        <MDBNavLink className=\"waves-effect waves-light black\" to=\"/\" >\n          <strong className=\"white-text font-italic\">Hi, I'm Julius Markauskas</strong>\n        </MDBNavLink>\n      </MDBNavbarBrand>\n      <MDBNavbarToggler onClick={() => toggleOpen(!navOpen)} />\n      <MDBCollapse id=\"navbarCollapse3\" isOpen={navOpen} navbar>\n        <MDBNavbarNav right>\n          <MDBNavItem onClick={changeState} active={active === '#/aboutme'} className={styles.active}>\n            <MDBNavLink to=\"aboutme\" onClick={closeNav}>About Me</MDBNavLink>\n          </MDBNavItem>\n          <MDBNavItem onClick={changeState} active={active === '#/portfolio'}>\n            <MDBNavLink to=\"portfolio\" onClick={closeNav}>Portfolio</MDBNavLink>\n          </MDBNavItem>\n          <MDBNavItem onClick={changeState} active={active === '#/contact'}>\n            <MDBNavLink to=\"contact\" onClick={closeNav}>Contact</MDBNavLink>\n          </MDBNavItem>\n        </MDBNavbarNav>\n        <MDBNavbarNav right>\n          <MDBTooltip placement='bottom' domElement style={{ display: 'block' }} >\n            <a className='nav-link'\n              href='https://github.com/Juliusm9791' target='_blank'>\n              <strong>\n                <MDBIcon fab icon='github' />\n              </strong>\n            </a><span>GitHub</span>\n          </MDBTooltip>\n          <MDBTooltip placement='bottom' domElement style={{ display: 'block' }} >\n            <a className='nav-link'\n              href='https://www.linkedin.com/in/julius-markauskas-795aa0103/' target='_blank'>\n              <strong>\n                <MDBIcon fab icon='linkedin' />\n              </strong>\n            </a><span>Linkedin</span>\n          </MDBTooltip>\n          <MDBTooltip placement='bottom' domElement style={{ display: 'block' }} >\n            <a className='nav-link'\n              href='https://juliusm9791.github.io/Portfolio/assets/pdf/Julius_Markauskas_resume1.pdf' target='_blank'>\n              <strong>\n                <MDBIcon icon='file-pdf' />\n              </strong>\n            </a><span>Resume</span>\n          </MDBTooltip>\n        </MDBNavbarNav>\n      </MDBCollapse>\n    </MDBNavbar>\n  );\n\n}\n\nexport default Nav;","import React from 'react';\nimport { MDBContainer, MDBCol, MDBBtn, MDBIcon } from 'mdbreact';\n\n\nexport default function About() {\n  return (\n    <MDBContainer className='mt-4 mb-4'>\n      <h1 className=\"text-center mb-4\">About Me</h1>\n      <div className=\"card mb-3\" >\n        <div className=\"row g-0\">\n          <div className=\"col-md-4\">\n            <img\n              // src=\"https://www.clearmountainbank.com/wp-content/uploads/2020/04/male-placeholder-image.jpeg\"\n              src='https://media-exp1.licdn.com/dms/image/C5603AQHHvY_CzF_i2g/profile-displayphoto-shrink_400_400/0/1517076701870?e=1655942400&v=beta&t=3LEOu3owP0M3LY6la-uPmSlQiPtIn0PHSwPgpXgqj3U'\n              alt=\"JM avatar\"\n              className=\"img-fluid rounded-start\"\n            />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title\"><strong>I'm Julius Markauskas</strong></h2>\n              <p className=\"card-text\">\n              Full Stack Web Developer and Digital Field Service Engineer with B.S. and M.S. in Computer Science. A fast learner with strong time and project management skills, broad experience in service and LEAN manufacturing. Strong troubleshooting and problem solving skills with an analytical mindset. Ability to adapt in both self-starting and collaborative environments while staying focused on achieving high quality results under strict deadlines. Top skills: JavaScript, HTML, CSS, and always eager to learn new things.</p>\n              <p className=\"card-text\">\n              <strong>Developer skils:</strong> JavaScript, Node.js, jQuery, HTML, CSS, MySQL MongoDB, Sequelize, Express.js, Git, APIs, Jest, Bootstrap, Handlebars, React.js, GraphQL.\n              </p>\n              <MDBCol md='12' className='d-flex justify-content-center'>\n                <a className=\"btn btn-outline-light text-dark mb-4\"\n                  href='https://github.com/Juliusm9791' target='_blank'>\n                  <MDBIcon size='lg' fab icon='github'></MDBIcon>\n                </a>\n                <a className=\"btn btn-outline-light text-dark mb-4\"\n                  href='https://www.linkedin.com/in/julius-markauskas-795aa0103/' target='_blank'>\n                  <MDBIcon size='lg' fab icon='linkedin'></MDBIcon>\n                </a>\n                <a className=\"btn btn-outline-light text-dark mb-4\"\n                  href='https://juliusm9791.github.io/Portfolio/assets/pdf/Julius_Markauskas_resume1.pdf' target='_blank'>\n                  <MDBIcon size='lg' icon='file-pdf'></MDBIcon>\n                </a>\n              </MDBCol>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n    </MDBContainer>\n  );\n}\n","function fixTitleName(title) {\n    title = title.toLowerCase()\n    let titleSplit = title.split(\"_\");\n    for (let i = 0; i < titleSplit.length; i++) {\n        titleSplit[i] = titleSplit[i].charAt(0).toUpperCase() + titleSplit[i].slice(1);\n    }\n    title = titleSplit.join(\" \")\n    return title;\n}\n\nexport default fixTitleName;\n","const images = [\n    {\n        name: 'Simple_Work_Day_Scheduler',\n        link: 'https://repository-images.githubusercontent.com/408978716/2e4f1044-f4fd-4102-a5e2-39bd50eb9df4'\n    },\n    {\n        name: 'Pet_Adopt',\n        link: 'https://repository-images.githubusercontent.com/431668354/11c4c572-fb10-4804-b2c0-773035f2d3bf'\n    },\n    {\n        name: 'Weather_Dashboard',\n        link: 'https://repository-images.githubusercontent.com/411104618/6dc854e5-647f-47b6-8365-5e2c91b0048c'\n    },\n    {\n        name: 'whats_for_dinner',\n        link: 'https://repository-images.githubusercontent.com/413541670/5f7708b0-964b-473c-b0a9-8f501d25d3f9'\n    },\n    {\n        name: 'Password_Generator',\n        link: 'https://repository-images.githubusercontent.com/402895988/adcdea08-b3ff-47a4-9bf5-c109d3dc409a'\n    },\n    {\n        name: 'Code_Quiz',\n        link: 'https://repository-images.githubusercontent.com/405237582/d44bf092-f066-40cb-a0c4-cd5ecb7f8e12'\n    },\n    {\n        name: 'Rock_Paper_Scissors',\n        link: 'https://repository-images.githubusercontent.com/402804908/107e8ac8-096a-4945-af65-197834b2d7de'\n    },\n    {\n        name: 'Mini_Project',\n        link: 'https://repository-images.githubusercontent.com/401732011/d0445271-3ef7-4b04-83b5-794fa3f436f4'\n    },\n    {\n        name: 'Developers_Tech_Blog',\n        link: 'https://repository-images.githubusercontent.com/430529132/a54158b0-a483-4bff-ac96-d97d7d550a57'\n        \n    },\n    {\n        name: 'fly-app',\n        link: 'https://repository-images.githubusercontent.com/460514100/8d097572-ec42-4864-91bf-32bfe3ea2647'\n    },\n    {\n        name: 'materials-trader-2.0',\n        link: 'https://repository-images.githubusercontent.com/488803453/dd002b23-4fbf-43d1-b1c6-8b10a8869754'\n    },\n\n\n]\nfunction returnLink(repo) {\n    for (let i = 0; i < images.length; i++) {\n        if (repo === images[i].name) {\n            return images[i].link\n\n        }\n    }\n}\n\n\nexport default returnLink ","import React, { useState, useEffect } from 'react';\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon, MDBView, MDBMask } from 'mdbreact';\nimport fixTitleName from '../../utils/correctData';\nimport returnLink from '../../utils/images';\nimport ReactCardFlipper from \"react-card-flipper\";\n\n\nexport default function Card() {\n\n    const [repos, getRepos] = useState([]);\n\n    useEffect(() => {\n        getData();\n\n        async function getData() {\n            const response = await fetch(\"https://api.github.com/users/Juliusm9791/repos\");\n            const data = await response.json();\n\n            getRepos(data);\n        }\n    }, []);\n\n    // const [reposD, getReposD] = useState([]);\n\n    // useEffect(() => {\n    //     getDataD();\n\n    //     async function getDataD() {\n    //         const response = await fetch(\"https://api.github.com/repos/djdyer/fly-app\");\n    //         const dataD = [await response.json()];\n\n    //         getReposD(dataD);\n    //     }\n    // }, []);\n\n    const combineRepo = [...repos] || {};\n\n    console.log(combineRepo)\n    const renderedCards = combineRepo.map((repo) => {\n        if (repo.name !== \"Portfolio\" && repo.name !== \"prework-about-me\" && repo.name !== \"Readme_Generator\" && repo.name !== \"Team_Profile_Generator\" && repo.name !== \"Team_Profile_Generator_HTML\" && repo.name !== \"Note_Taker\" && repo.name !== \"Employee_Tracker\" && repo.name !== \"E-Commerce\" && repo.name !== \"Social_Network_API\" && repo.name !== \"Text_Editor\" && repo.name !== \"Portfolio_React\" && repo.name !== \"Redux_Store\" && repo.name !== \"Book_Search_Engine\" && repo.name !== \"tech-news-java-api\") {\n            return (\n                <ReactCardFlipper width=\"350px\" height=\"600px\" behavior=\"click\" levitate={true} key={repo.id}>\n                    <div>\n                        <MDBCol className='p-4'  >\n                            <MDBCard>\n                                <a href={repo.homepage} target='_blank'>\n                                    <MDBCardImage\n                                        top\n                                        src={returnLink(repo.name)}\n                                        overlay='black-light'\n                                        hover\n                                        waves\n                                        alt={returnLink(repo.name)}\n                                    /></a>\n                                <MDBCardBody className='elegant-color white-text rounded-bottom'>\n                                    <hr className='hr-light' />\n                                    <MDBCardTitle>{fixTitleName(repo.name)}</MDBCardTitle>\n                                    <hr className='hr-light' />\n                                    <MDBCardText className='white-text'>\n                                        {repo.description}\n                                    </MDBCardText>\n                                    <a href={repo.svn_url} className='black-text d-flex justify-content-end'>\n                                        <h5 className='white-text'>\n                                            <MDBIcon fab icon='github' />    Read more\n                                            <MDBIcon icon='angle-double-right' className='ml-2' />\n                                        </h5>\n                                    </a>\n                                    <hr className='hr-light' />\n                                    <h6 className='white-text d-flex justify-content-end'>Tecnnology used\n                                        <MDBIcon icon='angle-double-right' className='ml-2' />\n                                    </h6>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </div>\n                    <div>\n                        <MDBCol className='p-4'  >\n                            <MDBCard>\n                                <MDBCardBody className='elegant-color white-text rounded-bottom'>\n                                    {/* <hr className='hr-light' /> */}\n                                    <MDBCardTitle>Tecnnology used:</MDBCardTitle>\n                                    <hr className='hr-light' />\n                                    <MDBCardText className='white-text'>\n                                        <ul>\n                                            {repo.topics.map((texh) => { return <li key={texh}>{texh}</li> })}\n                                        </ul>\n                                    </MDBCardText>\n                                    <hr className='hr-light' />\n                                    <h5 className='white-text d-flex justify-content-end'>\n                                        Return\n                                        <MDBIcon icon='angle-double-right' className='ml-2' />\n                                    </h5>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </div>\n                </ReactCardFlipper>\n            );\n        }\n    });\n\n\n    return (<>\n        {!combineRepo ? (<p>Loading ...</p>) : (\n            <MDBRow>{renderedCards}</MDBRow>\n\n        )};\n    </>\n    )\n}","import React from 'react';\nimport { MDBContainer } from 'mdbreact';\nimport Card from './card';\n\n\n\nexport default function Portfolio() {\n\n  return (\n\n    <MDBContainer className='mt-4 mb-4'>\n      <h1 className=\"text-center mb-4\">Portfolio</h1>\n      <Card />\n    </MDBContainer>\n  );\n}","import React, { useState } from \"react\";\nimport { MDBContainer, MDBCol, MDBBtn, MDBIcon } from 'mdbreact';\nimport { validateEmail } from '../../utils/helpers';\n\n\nconst FormPage = () => {\n  const [email, setEmail] = useState('');\n  const [userName, setName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [text, setText] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setName(inputValue);\n    } else if(inputType === 'text') {\n      setText(inputValue);\n    } else {\n      setSubject(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (!validateEmail(email) || !userName || !subject || !text) {\n      setErrorMessage('Email is invalid or you did not fill all fields');\n      return;\n    }\n\n\n    // Clear out the input after a successful registration.\n    setName('');\n    setText('');\n    setEmail('');\n    setSubject('');\n    setErrorMessage('');\n  };\n\n\n  return (\n    <MDBContainer>\n   \n        <MDBCol md=\"5\" className=\"mt-4 mb-5\">\n          <form>\n            <h1 className=\"text-center mb-4\">Send a Message</h1>\n            {errorMessage && (\n        <div className=\"text-danger text-center\">\n          <p className=\"error-text\"><strong>{errorMessage}</strong></p>\n        </div>\n      )}\n            <label htmlFor=\"defaultFormContactNameEx\" className=\"grey-text\">\n              Your name\n            </label>\n            <input type=\"text\" id=\"defaultFormContactNameEx\" \n            className=\"form-control\" value={userName} name=\"userName\" onChange={handleInputChange}/>\n            <br />\n            <label htmlFor=\"defaultFormContactEmailEx\" className=\"grey-text\">\n              Your email\n            </label>\n            <input type=\"email\" id=\"defaultFormContactEmailEx\" \n            className=\"form-control\" value={email} name=\"email\" onChange={handleInputChange}/>\n            <br />\n            <label htmlFor=\"defaultFormContactSubjectEx\" className=\"grey-text\">\n              Subject\n            </label>\n            <input type=\"text\" id=\"defaultFormContactSubjectEx\" \n            className=\"form-control\" value={subject} name=\"subject\" onChange={handleInputChange}/>\n            <br />\n            <label htmlFor=\"defaultFormContactMessageEx\" className=\"grey-text\">\n              Your message\n            </label>\n            <textarea type=\"textarea\" id=\"defaultFormContactMessageEx\" \n            className=\"form-control\" rows=\"3\" value={text} name=\"text\" onChange={handleInputChange}/>\n            <div className=\"text-center mt-4\">\n              <MDBBtn color=\"elegant-color\" outline type=\"submit\" onClick={handleFormSubmit}>\n                Send\n                <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n              </MDBBtn>\n            </div>\n          </form>\n\n        </MDBCol>\n  \n    </MDBContainer>\n  );\n};\n\nexport default FormPage;","export function validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React from 'react';\nimport Nav from './nav';\nimport About from './pages/aboutme';\nimport Portfolio from './pages/portfolio';\nimport Contact from './pages/contact';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Route, Switch } from 'react-router-dom';\n\nconst Portfoliomain = () => {\n\n\n  return (\n    <Router>\n\n      <Nav />\n      <Switch>\n        <Route exact path='/' component={About} />\n        <Route exact path='/aboutme' component={About} />\n        <Route exact path='/portfolio' component={Portfolio} />\n        <Route exact path='/contact' component={Contact} />\n        <Route\n          render={function () {\n            return <h1>Not Found</h1>;\n          }}\n        />\n      </Switch>\n\n    </Router>\n\n  );\n}\n\nexport default Portfoliomain;","import Portfoliomain from './components/portfoliomain';\nimport { MDBTooltip, MDBIcon } from 'mdbreact'\n\nfunction App() {\n  return (\n    <>\n      <Portfoliomain />\n      <footer className=\"fixed-bottom pt-3 pb-2 bg-dark white-text\">\n        <MDBTooltip placement='bottom' domElement style={{ display: 'inline' }} >\n          <a className='m-2 white-text'\n            href='/'>\n            <i>\n             © Julius Markauskas, 2022\n            </i>\n          </a><span>Portfolio</span>\n        </MDBTooltip>\n        <MDBTooltip placement='bottom' domElement style={{ display: 'inline' }} >\n          <a className='m-2 white-text'\n            href='https://github.com/Juliusm9791' target='_blank'>\n            <strong>\n              <MDBIcon fab icon='github' />\n            </strong>\n          </a><span>GitHub</span>\n        </MDBTooltip>\n        <MDBTooltip placement='bottom' domElement style={{ display: 'inline' }} >\n          <a className='m-2 white-text'\n            href='https://www.linkedin.com/in/julius-markauskas-795aa0103/' target='_blank'>\n            <strong>\n              <MDBIcon fab icon='linkedin' />\n            </strong>\n          </a><span>Linkedin</span>\n        </MDBTooltip>\n        <MDBTooltip placement='bottom' domElement style={{ display: 'inline' }} >\n          <a className='m-2 white-text'\n            href='https://juliusm9791.github.io/Portfolio/assets/pdf/Julius_Markauskas_resume1.pdf' target='_blank'>\n            <strong>\n              <MDBIcon icon='file-pdf' />\n            </strong>\n          </a><span>Resume</span>\n        </MDBTooltip>\n      </footer>\n    </>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}